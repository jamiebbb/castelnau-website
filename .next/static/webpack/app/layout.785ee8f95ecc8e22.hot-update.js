"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/lib/stockData.ts":
/*!******************************!*\
  !*** ./src/lib/stockData.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getStockData: () => (/* binding */ getStockData)\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\nlet cachedData = null;\nlet lastFetchTime = 0;\nconst CACHE_DURATION = 24 * 60 * 60 * 1000; // 24 hours in milliseconds\nasync function getStockData() {\n    const now = Date.now();\n    // Return cached data if it's still fresh (less than 24 hours old)\n    if (cachedData && now - lastFetchTime < CACHE_DURATION) {\n        return cachedData;\n    }\n    // Fetch both daily price data and company overview\n    const [priceResponse, overviewResponse] = await Promise.all([\n        fetch(\"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=CGL.L&apikey=\".concat(process.env.ALPHA_VANTAGE_API_KEY)),\n        fetch(\"https://www.alphavantage.co/query?function=OVERVIEW&symbol=CGL.L&apikey=\".concat(process.env.ALPHA_VANTAGE_API_KEY))\n    ]);\n    const priceData = await priceResponse.json();\n    const overviewData = await overviewResponse.json();\n    // Transform the price data\n    const timeSeriesData = priceData['Time Series (Daily)'];\n    const dates = Object.keys(timeSeriesData).slice(0, 30); // Last 30 days\n    const prices = dates.map((date)=>parseFloat(timeSeriesData[date]['4. close']));\n    // Get shares outstanding from overview data\n    // Alpha Vantage provides shares outstanding in millions\n    const sharesOutstanding = parseFloat(overviewData.SharesOutstanding) * 1000000;\n    const latestPrice = prices[0];\n    const marketCap = sharesOutstanding * latestPrice;\n    console.log('Alpha Vantage Overview Data:', overviewData);\n    console.log('Shares Outstanding:', sharesOutstanding);\n    console.log('Latest Price:', latestPrice);\n    console.log('Market Cap:', marketCap);\n    const transformedData = {\n        currentPrice: prices[0],\n        marketCap: marketCap,\n        sharesOutstanding: sharesOutstanding,\n        lastUpdated: new Date().toISOString(),\n        historicalData: {\n            labels: dates.map((date)=>new Date(date).toLocaleDateString()),\n            prices: prices\n        }\n    };\n    // Update cache\n    cachedData = transformedData;\n    lastFetchTime = now;\n    return transformedData;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvc3RvY2tEYXRhLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBSUEsYUFBa0I7QUFDdEIsSUFBSUMsZ0JBQXdCO0FBQzVCLE1BQU1DLGlCQUFpQixLQUFLLEtBQUssS0FBSyxNQUFNLDJCQUEyQjtBQUVoRSxlQUFlQztJQUNwQixNQUFNQyxNQUFNQyxLQUFLRCxHQUFHO0lBRXBCLGtFQUFrRTtJQUNsRSxJQUFJSixjQUFjLE1BQU9DLGdCQUFpQkMsZ0JBQWdCO1FBQ3hELE9BQU9GO0lBQ1Q7SUFFQSxtREFBbUQ7SUFDbkQsTUFBTSxDQUFDTSxlQUFlQyxpQkFBaUIsR0FBRyxNQUFNQyxRQUFRQyxHQUFHLENBQUM7UUFDMURDLE1BQ0Usb0ZBQXNILE9BQWxDQyxPQUFPQSxDQUFDQyxHQUFHLENBQUNDLHFCQUFxQjtRQUV2SEgsTUFDRSwyRUFBNkcsT0FBbENDLE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0MscUJBQXFCO0tBRS9HO0lBRUQsTUFBTUMsWUFBWSxNQUFNUixjQUFjUyxJQUFJO0lBQzFDLE1BQU1DLGVBQWUsTUFBTVQsaUJBQWlCUSxJQUFJO0lBRWhELDJCQUEyQjtJQUMzQixNQUFNRSxpQkFBaUJILFNBQVMsQ0FBQyxzQkFBc0I7SUFDdkQsTUFBTUksUUFBUUMsT0FBT0MsSUFBSSxDQUFDSCxnQkFBZ0JJLEtBQUssQ0FBQyxHQUFHLEtBQUssZUFBZTtJQUN2RSxNQUFNQyxTQUFTSixNQUFNSyxHQUFHLENBQUNDLENBQUFBLE9BQ3ZCQyxXQUFXUixjQUFjLENBQUNPLEtBQUssQ0FBQyxXQUFXO0lBRzdDLDRDQUE0QztJQUM1Qyx3REFBd0Q7SUFDeEQsTUFBTUUsb0JBQW9CRCxXQUFXVCxhQUFhVyxpQkFBaUIsSUFBSTtJQUN2RSxNQUFNQyxjQUFjTixNQUFNLENBQUMsRUFBRTtJQUM3QixNQUFNTyxZQUFZSCxvQkFBb0JFO0lBRXRDRSxRQUFRQyxHQUFHLENBQUMsZ0NBQWdDZjtJQUM1Q2MsUUFBUUMsR0FBRyxDQUFDLHVCQUF1Qkw7SUFDbkNJLFFBQVFDLEdBQUcsQ0FBQyxpQkFBaUJIO0lBQzdCRSxRQUFRQyxHQUFHLENBQUMsZUFBZUY7SUFFM0IsTUFBTUcsa0JBQWtCO1FBQ3RCQyxjQUFjWCxNQUFNLENBQUMsRUFBRTtRQUN2Qk8sV0FBV0E7UUFDWEgsbUJBQW1CQTtRQUNuQlEsYUFBYSxJQUFJN0IsT0FBTzhCLFdBQVc7UUFDbkNDLGdCQUFnQjtZQUNkQyxRQUFRbkIsTUFBTUssR0FBRyxDQUFDQyxDQUFBQSxPQUFRLElBQUluQixLQUFLbUIsTUFBTWMsa0JBQWtCO1lBQzNEaEIsUUFBUUE7UUFDVjtJQUNGO0lBRUEsZUFBZTtJQUNmdEIsYUFBYWdDO0lBQ2IvQixnQkFBZ0JHO0lBRWhCLE9BQU80QjtBQUNUIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGphbWllXFxPbmVEcml2ZSAtIFBob2VuaXggQXNzZXQgTWFuYWdlbWVudCBQYXJ0bmVyc1xcQ2FzdGVsbmF1IEdyb3VwXFxTY3JhcGluZ1xcV2Vic2l0ZVxcY2FzdGVsbmF1LXdlYnNpdGVcXHNyY1xcbGliXFxzdG9ja0RhdGEudHMiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IGNhY2hlZERhdGE6IGFueSA9IG51bGw7XHJcbmxldCBsYXN0RmV0Y2hUaW1lOiBudW1iZXIgPSAwO1xyXG5jb25zdCBDQUNIRV9EVVJBVElPTiA9IDI0ICogNjAgKiA2MCAqIDEwMDA7IC8vIDI0IGhvdXJzIGluIG1pbGxpc2Vjb25kc1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFN0b2NrRGF0YSgpIHtcclxuICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xyXG4gIFxyXG4gIC8vIFJldHVybiBjYWNoZWQgZGF0YSBpZiBpdCdzIHN0aWxsIGZyZXNoIChsZXNzIHRoYW4gMjQgaG91cnMgb2xkKVxyXG4gIGlmIChjYWNoZWREYXRhICYmIChub3cgLSBsYXN0RmV0Y2hUaW1lKSA8IENBQ0hFX0RVUkFUSU9OKSB7XHJcbiAgICByZXR1cm4gY2FjaGVkRGF0YTtcclxuICB9XHJcblxyXG4gIC8vIEZldGNoIGJvdGggZGFpbHkgcHJpY2UgZGF0YSBhbmQgY29tcGFueSBvdmVydmlld1xyXG4gIGNvbnN0IFtwcmljZVJlc3BvbnNlLCBvdmVydmlld1Jlc3BvbnNlXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcclxuICAgIGZldGNoKFxyXG4gICAgICBgaHR0cHM6Ly93d3cuYWxwaGF2YW50YWdlLmNvL3F1ZXJ5P2Z1bmN0aW9uPVRJTUVfU0VSSUVTX0RBSUxZJnN5bWJvbD1DR0wuTCZhcGlrZXk9JHtwcm9jZXNzLmVudi5BTFBIQV9WQU5UQUdFX0FQSV9LRVl9YFxyXG4gICAgKSxcclxuICAgIGZldGNoKFxyXG4gICAgICBgaHR0cHM6Ly93d3cuYWxwaGF2YW50YWdlLmNvL3F1ZXJ5P2Z1bmN0aW9uPU9WRVJWSUVXJnN5bWJvbD1DR0wuTCZhcGlrZXk9JHtwcm9jZXNzLmVudi5BTFBIQV9WQU5UQUdFX0FQSV9LRVl9YFxyXG4gICAgKVxyXG4gIF0pO1xyXG5cclxuICBjb25zdCBwcmljZURhdGEgPSBhd2FpdCBwcmljZVJlc3BvbnNlLmpzb24oKTtcclxuICBjb25zdCBvdmVydmlld0RhdGEgPSBhd2FpdCBvdmVydmlld1Jlc3BvbnNlLmpzb24oKTtcclxuICBcclxuICAvLyBUcmFuc2Zvcm0gdGhlIHByaWNlIGRhdGFcclxuICBjb25zdCB0aW1lU2VyaWVzRGF0YSA9IHByaWNlRGF0YVsnVGltZSBTZXJpZXMgKERhaWx5KSddO1xyXG4gIGNvbnN0IGRhdGVzID0gT2JqZWN0LmtleXModGltZVNlcmllc0RhdGEpLnNsaWNlKDAsIDMwKTsgLy8gTGFzdCAzMCBkYXlzXHJcbiAgY29uc3QgcHJpY2VzID0gZGF0ZXMubWFwKGRhdGUgPT4gXHJcbiAgICBwYXJzZUZsb2F0KHRpbWVTZXJpZXNEYXRhW2RhdGVdWyc0LiBjbG9zZSddKVxyXG4gICk7XHJcblxyXG4gIC8vIEdldCBzaGFyZXMgb3V0c3RhbmRpbmcgZnJvbSBvdmVydmlldyBkYXRhXHJcbiAgLy8gQWxwaGEgVmFudGFnZSBwcm92aWRlcyBzaGFyZXMgb3V0c3RhbmRpbmcgaW4gbWlsbGlvbnNcclxuICBjb25zdCBzaGFyZXNPdXRzdGFuZGluZyA9IHBhcnNlRmxvYXQob3ZlcnZpZXdEYXRhLlNoYXJlc091dHN0YW5kaW5nKSAqIDEwMDAwMDA7XHJcbiAgY29uc3QgbGF0ZXN0UHJpY2UgPSBwcmljZXNbMF07XHJcbiAgY29uc3QgbWFya2V0Q2FwID0gc2hhcmVzT3V0c3RhbmRpbmcgKiBsYXRlc3RQcmljZTtcclxuXHJcbiAgY29uc29sZS5sb2coJ0FscGhhIFZhbnRhZ2UgT3ZlcnZpZXcgRGF0YTonLCBvdmVydmlld0RhdGEpO1xyXG4gIGNvbnNvbGUubG9nKCdTaGFyZXMgT3V0c3RhbmRpbmc6Jywgc2hhcmVzT3V0c3RhbmRpbmcpO1xyXG4gIGNvbnNvbGUubG9nKCdMYXRlc3QgUHJpY2U6JywgbGF0ZXN0UHJpY2UpO1xyXG4gIGNvbnNvbGUubG9nKCdNYXJrZXQgQ2FwOicsIG1hcmtldENhcCk7XHJcblxyXG4gIGNvbnN0IHRyYW5zZm9ybWVkRGF0YSA9IHtcclxuICAgIGN1cnJlbnRQcmljZTogcHJpY2VzWzBdLFxyXG4gICAgbWFya2V0Q2FwOiBtYXJrZXRDYXAsXHJcbiAgICBzaGFyZXNPdXRzdGFuZGluZzogc2hhcmVzT3V0c3RhbmRpbmcsXHJcbiAgICBsYXN0VXBkYXRlZDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgaGlzdG9yaWNhbERhdGE6IHtcclxuICAgICAgbGFiZWxzOiBkYXRlcy5tYXAoZGF0ZSA9PiBuZXcgRGF0ZShkYXRlKS50b0xvY2FsZURhdGVTdHJpbmcoKSksXHJcbiAgICAgIHByaWNlczogcHJpY2VzXHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgLy8gVXBkYXRlIGNhY2hlXHJcbiAgY2FjaGVkRGF0YSA9IHRyYW5zZm9ybWVkRGF0YTtcclxuICBsYXN0RmV0Y2hUaW1lID0gbm93O1xyXG4gIFxyXG4gIHJldHVybiB0cmFuc2Zvcm1lZERhdGE7XHJcbn0gIl0sIm5hbWVzIjpbImNhY2hlZERhdGEiLCJsYXN0RmV0Y2hUaW1lIiwiQ0FDSEVfRFVSQVRJT04iLCJnZXRTdG9ja0RhdGEiLCJub3ciLCJEYXRlIiwicHJpY2VSZXNwb25zZSIsIm92ZXJ2aWV3UmVzcG9uc2UiLCJQcm9taXNlIiwiYWxsIiwiZmV0Y2giLCJwcm9jZXNzIiwiZW52IiwiQUxQSEFfVkFOVEFHRV9BUElfS0VZIiwicHJpY2VEYXRhIiwianNvbiIsIm92ZXJ2aWV3RGF0YSIsInRpbWVTZXJpZXNEYXRhIiwiZGF0ZXMiLCJPYmplY3QiLCJrZXlzIiwic2xpY2UiLCJwcmljZXMiLCJtYXAiLCJkYXRlIiwicGFyc2VGbG9hdCIsInNoYXJlc091dHN0YW5kaW5nIiwiU2hhcmVzT3V0c3RhbmRpbmciLCJsYXRlc3RQcmljZSIsIm1hcmtldENhcCIsImNvbnNvbGUiLCJsb2ciLCJ0cmFuc2Zvcm1lZERhdGEiLCJjdXJyZW50UHJpY2UiLCJsYXN0VXBkYXRlZCIsInRvSVNPU3RyaW5nIiwiaGlzdG9yaWNhbERhdGEiLCJsYWJlbHMiLCJ0b0xvY2FsZURhdGVTdHJpbmciXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/stockData.ts\n"));

/***/ })

});